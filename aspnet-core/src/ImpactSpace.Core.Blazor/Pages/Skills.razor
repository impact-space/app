@page "/skills"
@attribute [Authorize(CorePermissions.GlobalTypes.Skills.Default)]
@using ImpactSpace.Core.Skills
@using ImpactSpace.Core.Localization
@using ImpactSpace.Core.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.AspNetCore.Components.Web.Theming
@using Volo.Abp.BlazoriseUI.Components.ObjectExtending
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@inject ISkillGroupAppService SkillGroupAppService
@inject AbpBlazorMessageLocalizerHelper<CoreResource> LH

@inherits AbpCrudPageBase<ISkillAppService, SkillDto, Guid, GetSkillListDto, SkillCreateDto, SkillUpdateDto>
<Card>
    <CardHeader>
        @* ************************* PAGE HEADER ************************* *@
        <PageHeader Title="@L["Skills"]" 
                    BreadcrumbItems="@BreadcrumbItems"
                    Toolbar="@Toolbar">
        </PageHeader>
        <Row>
            <Column ColumnSize="ColumnSize.IsHalf">
                <Label>@L["Search"]</Label>
                <TextEdit Text="@FilterText" TextChanged="@OnFilterTextChanged" />
            </Column>
            <Column ColumnSize="ColumnSize.IsHalf">
                <Label>@L["SkillGroup"]</Label>
                <Select TValue="Guid?" SelectedValue="@SelectedSkillGroupId" SelectedValueChanged="@OnSkillGroupFilterChanged">
                    <SelectItem TValue="Guid?" Value="null"></SelectItem>
                    @foreach (var skillGroup in SkillGroupList)
                    {
                        <SelectItem TValue="Guid?" Value="@skillGroup.Id">@skillGroup.Name</SelectItem>
                    }
                </Select>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        @* ************************* DATA GRID ************************* *@
        <AbpExtensibleDataGrid TItem="SkillDto"
                               Data="@Entities"
                               ReadData="@OnDataGridReadAsync"
                               TotalItems="@TotalCount"
                               ShowPager="true"
                               PageSize="@PageSize"
                               CurrentPage="@CurrentPage"
                               Columns="@SkillManagementTableColumns">
        </AbpExtensibleDataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
@if (HasCreatePermission)
{
    <Modal @ref="CreateModal">
        <ModalContent IsCentered="true">
            <Form>
                <ModalHeader>
                    <ModalTitle>@L["NewSkillGroup"]</ModalTitle>
                    <CloseButton Clicked="CloseCreateModalAsync"/>
                </ModalHeader>
                <ModalBody>
                    <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Name"]</FieldLabel>
                                <TextEdit @bind-Text="@NewEntity.Name" Autofocus="true">
                                    <Feedback>
                                        <ValidationError/>
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <Field>
                            <FieldLabel>@L["SkillGroup"]</FieldLabel>
                            <Select TValue="Guid" @bind-SelectedValue="@NewEntity.SkillGroupId">
                                @foreach (var skillGroup in SkillGroupList)
                                {
                                    <SelectItem TValue="Guid" Value="@skillGroup.Id">
                                        @skillGroup.Name
                                    </SelectItem>
                                }
                            </Select>
                        </Field>
                    </Validations>
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Secondary"
                            Clicked="CloseCreateModalAsync">
                        @L["Cancel"]
                    </Button>
                    <Button Color="Color.Primary"
                            Type="@ButtonType.Submit"
                            PreventDefaultOnSubmit="true"
                            Clicked="CreateEntityAsync">
                        @L["Save"]
                    </Button>
                </ModalFooter>
            </Form>
        </ModalContent>
    </Modal>
}

@* ************************* EDIT MODAL ************************* *@
@if (HasUpdatePermission)
{
    <Modal @ref="EditModal">
        <ModalContent IsCentered="true">
            <Form>
                <ModalHeader>
                    <ModalTitle>@EditingEntity.Name</ModalTitle>
                    <CloseButton Clicked="CloseEditModalAsync"/>
                </ModalHeader>
                <ModalBody>
                    <Validations @ref="@EditValidationsRef" Model="@EditingEntity" ValidateOnLoad="false">
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Name"]</FieldLabel>
                                <TextEdit @bind-Text="@EditingEntity.Name" Autofocus="true">
                                    <Feedback>
                                        <ValidationError/>
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <Field>
                            <FieldLabel>@L["SkillGroup"]</FieldLabel>
                            <Select TValue="Guid" @bind-SelectedValue="@EditingEntity.SkillGroupId">
                                @foreach (var skillGroup in SkillGroupList)
                                {
                                    <SelectItem TValue="Guid" Value="@skillGroup.Id">
                                        @skillGroup.Name
                                    </SelectItem>
                                }
                            </Select>
                        </Field>
                    </Validations>
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Secondary"
                            Clicked="CloseEditModalAsync">
                        @L["Cancel"]
                    </Button>
                    <Button Color="Color.Primary"
                            Type="@ButtonType.Submit"
                            PreventDefaultOnSubmit="true"
                            Clicked="UpdateEntityAsync">
                        @L["Save"]
                    </Button>
                </ModalFooter>
            </Form>
        </ModalContent>
    </Modal>
}
