@using ImpactSpace.Core.Localization
@using ImpactSpace.Core.Organizations
@using ImpactSpace.Core.Permissions
@using Microsoft.AspNetCore.Components
@using Volo.Abp.AspNetCore.Components.Web
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
@using ImpactSpace.Core.Skills
@using ImpactSpace.Core.Common
@inject AbpBlazorMessageLocalizerHelper<CoreResource> LH
@inject IOrganizationMemberAppService OrganizationMemberAppService
@inject ISkillAppService SkillAppService
@inherits CoreComponentBase

<!-- Member Skills List -->
<Card>
    <CardHeader>
        <CardTitle>@L["Skills"]</CardTitle>
        <CardText>
            <Button Color="Color.Primary" Clicked="OpenAddSkillsModal">@L["AddSkill"]</Button>
        </CardText>
    </CardHeader>
    <CardBody>
        <AbpExtensibleDataGrid TItem="OrganizationMemberSkillDto"
                                       Data="@MemberSkills"
                                       ReadData="@OnDataGridReadAsync"
                                       TotalItems="@TotalSkillCount"
                                       ShowPager="true"
                                       PageSize="@PageSize"
                                       CurrentPage="@CurrentSkillPage"
                                       Columns="@MemberSkillsTableColumns">
        </AbpExtensibleDataGrid>
    </CardBody>
</Card>

<!-- Add Skill Modal -->
<Modal @ref="AddSkillsModal">
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["AddSkill"]</ModalTitle>
                <CloseButton Clicked="CloseAddSkillsModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="AddSkillsValidationsRef" Model="AddingSkillEntity" ValidateOnLoad="false">
                    <Field>
                        <FieldLabel>@L["Skill"]</FieldLabel>
                        <SkillSelector @ref="SkillSelectorRef" ValueChanged="OnSkillSelected" ExcludeSkillIds="MemberSkills.Select(skill => skill.SkillId).ToList()" />
                    </Field>
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["ProficiencyLevel"]</FieldLabel>
                            <Select @bind-SelectedValue="@AddingSkillEntity.ProficiencyLevel" TItem="ProficiencyLevel">
                                @foreach (ProficiencyLevel level in Enum.GetValues(typeof(ProficiencyLevel)))
                                {
                                    <SelectItem Value="@(level)">@level.ToString()</SelectItem>
                                }
                            </Select>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseAddSkillsModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="AddSkillsAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<!-- Edit Skills Modal -->
<Modal @ref="EditSkillsModal">
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@SelectedSkillName</ModalTitle>
                <CloseButton Clicked="CloseEditSkillsModal" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="EditSkillsValidationsRef" Model="EditingSkillEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["ProficiencyLevel"]</FieldLabel>
                            <Select @bind-SelectedValue="EditingSkillEntity.ProficiencyLevel" TItem="ProficiencyLevel">
                                @foreach (ProficiencyLevel level in Enum.GetValues(typeof(ProficiencyLevel)))
                                {
                                    <SelectItem Value="@level">@level.ToString()</SelectItem>
                                }
                            </Select>
                            <Feedback>
                                <ValidationError />
                            </Feedback>
                        </Field>
                    </Validation>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditSkillsModal">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateSkillsAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>